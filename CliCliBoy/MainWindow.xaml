<Window x:Class="CliCliBoy.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:CliCliBoy"
        xmlns:view="clr-namespace:CliCliBoy.view"
        Title="edit AssemblyInfo.cs to modify title"
        Icon="resources/clicli.png"
        Loaded="OnLoaded"
        Closing="OnClosing"
        Height="450" Width="868">
    <Window.Resources>
        <ResourceDictionary Source="view/CommonResource.xaml"/>
    </Window.Resources>

    <Window.CommandBindings>
        <!-- Project Command -->
        <CommandBinding Command="{x:Static local:MainWindow.CopyProject}" Executed="HandleCopyProject" CanExecute="CanExecOnProjSelected"/>
        <CommandBinding Command="{x:Static local:MainWindow.CutProject}" Executed="HandleCutProject" CanExecute="CanExecOnProjSelected"/>
        <CommandBinding Command="{x:Static local:MainWindow.PasteProject}" Executed="HandlePasteProject" CanExecute="CanPasteProject"/>
        <CommandBinding Command="{x:Static local:MainWindow.EditProject}" Executed="HandleEditProject" CanExecute="CanExecOnProjSelected"/>
        <CommandBinding Command="{x:Static local:MainWindow.TranslateProject}" Executed="HandleTranslateProject" CanExecute="CanExecOnProjSelected"/>
        <CommandBinding Command="{x:Static local:MainWindow.InsertProject}" Executed="HandleInsertProject" CanExecute="CanExecOnProjSelected"/>
        <CommandBinding Command="{x:Static local:MainWindow.DeleteProject}" Executed="HandleDeleteProject" CanExecute="CanExecOnProjSelected"/>
        <CommandBinding Command="{x:Static local:MainWindow.ExportProject}" Executed="HandleExportProject" CanExecute="CanExecOnProjSelected"/>
        <CommandBinding Command="{x:Static local:MainWindow.ImportProject}" Executed="HandleImportProject" CanExecute="CanExecAlways"/>

        <!-- Target Item Command -->
        <CommandBinding Command="{x:Static local:MainWindow.CopyTarget}" Executed="HandleCopyTarget" CanExecute="CanExecOnTargetSelected"/>
        <CommandBinding Command="{x:Static local:MainWindow.CutTarget}" Executed="HandleCutTarget" CanExecute="CanDeleteTarget"/>
        <CommandBinding Command="{x:Static local:MainWindow.PasteTarget}" Executed="HandlePasteTarget" CanExecute="CanPasteTarget"/>
        <CommandBinding Command="{x:Static local:MainWindow.EditTarget}" Executed="HandleEditTarget" CanExecute="CanEditTarget"/>
        <CommandBinding Command="{x:Static local:MainWindow.InsertTarget}" Executed="HandleInsertTarget" CanExecute="CanInsertTarget"/>
        <CommandBinding Command="{x:Static local:MainWindow.DeleteTarget}" Executed="HandleDeleteTarget" CanExecute="CanDeleteTarget"/>
        <CommandBinding Command="{x:Static local:MainWindow.EnableTarget}" Executed="HandleEnableTarget" CanExecute="CanEnableTarget"/>
        <CommandBinding Command="{x:Static local:MainWindow.DisableTarget}" Executed="HandleDisableTarget" CanExecute="CanEnableTarget"/>

        <!-- File Command -->
        <CommandBinding Command="{x:Static local:MainWindow.FileNew}" Executed="HandleFileNew" CanExecute="CanExecAlways"/>
        <CommandBinding Command="{x:Static local:MainWindow.FileOpen}" Executed="HandleFileOpen" CanExecute="CanExecAlways"/>
        <CommandBinding Command="{x:Static local:MainWindow.FileSave}" Executed="HandleFileSave" CanExecute="CanExecAlways"/>
        <CommandBinding Command="{x:Static local:MainWindow.FileSaveAs}" Executed="HandleFileSaveAs" CanExecute="CanExecAlways"/>
    </Window.CommandBindings>
    <Grid x:Name="MainContainer">
        <Grid.Resources>
            <Style TargetType="ListViewItem">
                <EventSetter Event="MouseDoubleClick" Handler="ListViewItem_MouseDoubleClick"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            </Style>
            <Style x:Key="AbsRel" TargetType="TextBlock">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding CurrentProject.Mode.IsRelative}" Value="true">
                        <Setter Property="Text" Value="Relative"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding CurrentProject.Mode.IsRelative}" Value="false">
                        <Setter Property="Text" Value="Absolute"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="PlayImage" TargetType="Image">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsPlaying}" Value="true">
                        <Setter Property="Source" Value="{StaticResource StopIcon}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsPlaying}" Value="false">
                        <Setter Property="Source" Value="{StaticResource StartIcon}"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <GridViewColumn x:Key="gridViewUtilizationColumn" Header="Utilization" Width="50">
                <GridViewColumn.CellTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding UtilizationCount}" HorizontalAlignment="Right"/>
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>

        </Grid.Resources>
        <Grid x:Name="SettingPanel" Visibility="Visible">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <!--Project Pane-->
            <Grid Grid.Column="0" x:Name="ProjectPane">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Background="{StaticResource TBProjectBg}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" Margin="5" HorizontalAlignment="Left" VerticalAlignment="Stretch" Orientation="Horizontal">
                            <!-- Items -->
                            <Button x:Name="BtnAddProj" 
                                    Click="BtnAddProj_Click" >
                                <Image Source="{StaticResource AddIcon}"/>
                            </Button>
                            <StackPanel Orientation="Vertical">
                            <Button
                                Height="24"
                                Click="BtnProjUp_Click">
                                <Image Source="{StaticResource UpIcon}"/>
                            </Button>
                            <Button
                                Height="24"
                                Click="BtnProjDown_Click">
                                <Image Source="{StaticResource DownIcon}"/>
                            </Button>
                            </StackPanel>

                            <!--<Button x:Name="BtnDelProj" 
                                    Cursor="Hand" 
                                    Click="BtnDelProj_Click">
                                <Image Source="{StaticResource RemoveIcon}"/>
                            </Button>-->
                            
                        </StackPanel>

                        <StackPanel Grid.Column="2" Margin="0,5" HorizontalAlignment="Right" VerticalAlignment="Stretch" Orientation="Horizontal">
                            <!--<Button Visibility="{Binding IsRelative, Converter={StaticResource BoolToVisibility}}" Command="{x:Static local:MainWindow.TranslateProject}">
                                <Image Source="{StaticResource RelocateIcon}"/>
                            </Button>-->
                            <view:DropDownMenuButton x:Name="BtnMenu" Style="{StaticResource MenuButton}">
                                <Image Source="{StaticResource MenuIcon}"/>
                                <view:DropDownMenuButton.DropDownContextMenu>
                                    <ContextMenu x:Name="FileMenu" Background="WhiteSmoke" Opened="FileMenu_Opened">
                                        <MenuItem Header="New(_N)" Command="{x:Static local:MainWindow.FileNew}"/>
                                        <MenuItem Header="Open(_O)" Command="{x:Static local:MainWindow.FileOpen}"/>
                                        <MenuItem Header="Save(_S)" Command="{x:Static local:MainWindow.FileSave}"/>
                                        <MenuItem Header="Save As(_A)" Command="{x:Static local:MainWindow.FileSaveAs}"/>
                                    </ContextMenu>
                                </view:DropDownMenuButton.DropDownContextMenu>
                            </view:DropDownMenuButton>

                            <!--<ToggleButton x:Name="BtnMenu">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border 
                                                        x:Name="border" 
                                                        Padding="2" 
                                                        CornerRadius="3" 
                                                        Background="Green" 
                                                        BorderThickness="0" 
                                                        SnapsToDevicePixels="True">
                                                        <ContentPresenter x:Name="contentPresenter"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="true">
                                                            <Setter Property="Background" 
                                                                    TargetName="border" 
                                                                    Value="Red"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="true">
                                                            <Setter Property="Background" 
                                                                    TargetName="border" 
                                                                    Value="Yellow"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                                <Image Source="{StaticResource MenuIcon}"/>
                            </ToggleButton>-->

                        </StackPanel>
                    </Grid>
                    
                    <Grid Grid.Row="1">
                        <Grid.Resources>
                            <Style TargetType="RadioButton" BasedOn="{StaticResource RadioToggle}">
                                <EventSetter Event="Click" Handler="BtnRegist_Click"/>
                                <EventSetter Event="MouseRightButtonUp" Handler="BtnRegist_RightClick"/>
                                <Setter Property="Padding" Value="0,2"/>
                                <Setter Property="IsChecked" Value="{Binding IsSelected}"/>
                            </Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource RadioToggleText}"/>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <RadioButton Grid.Column="0" DataContext="{Binding Registrations[0]}">
                            <TextBlock Text="1"/>
                        </RadioButton>
                        <RadioButton Grid.Column="1" DataContext="{Binding Registrations[1]}">
                            <TextBlock Text="2"/>
                        </RadioButton>
                        <RadioButton Grid.Column="2" DataContext="{Binding Registrations[2]}">
                            <TextBlock Text="3"/>
                        </RadioButton>
                        <RadioButton Grid.Column="3" DataContext="{Binding Registrations[3]}">
                            <TextBlock Text="4"/>
                        </RadioButton>
                        <RadioButton Grid.Column="4" DataContext="{Binding Registrations[4]}">
                            <TextBlock Text="5"/>
                        </RadioButton>

                    </Grid>
                    
                    <ListView Grid.Row="2" x:Name="ProjectListView" ItemsSource="{Binding}">
                        <ListView.ContextMenu>
                            <ContextMenu Name="Proj" Background="WhiteSmoke">
                                <MenuItem Header="Copy(_C)" InputGestureText="Ctrl+C" Command="{x:Static local:MainWindow.CopyProject}"/>
                                <MenuItem Header="Cut(_T)" InputGestureText="Ctrl+X" Command="{x:Static local:MainWindow.CutProject}"/>
                                <MenuItem Header="Paste(_P)" InputGestureText="Ctrl+P" Command="{x:Static local:MainWindow.PasteProject}"/>
                                <Separator/>
                                <MenuItem Header="Base Point(_B)" InputGestureText="Enter" Command="{x:Static local:MainWindow.TranslateProject}"/>
                                <MenuItem Header="Edit(_E)" InputGestureText="Ctrl+Enter" Command="{x:Static local:MainWindow.EditProject}"/>
                                <MenuItem Header="Insert(_I)" Command="{x:Static local:MainWindow.InsertProject}"/>
                                <MenuItem Header="Delete(_D)" Command="{x:Static local:MainWindow.DeleteProject}"/>
                                <Separator/>
                                <MenuItem Header="Export(_X)" Command="{x:Static local:MainWindow.ExportProject}"/>
                                <MenuItem Header="Import(_M)" Command="{x:Static local:MainWindow.ImportProject}"/>
                                <Separator/>
                                <MenuItem Header="Registration">
                                    <MenuItem Header="Regist to 1" Click="Button_Registration" CommandParameter="1"/>
                                    <MenuItem Header="Regist to 2" Click="Button_Registration" CommandParameter="2"/>
                                    <MenuItem Header="Regist to 3" Click="Button_Registration" CommandParameter="3"/>
                                    <MenuItem Header="Regist to 4" Click="Button_Registration" CommandParameter="4"/>
                                    <MenuItem Header="Regist to 5" Click="Button_Registration" CommandParameter="5"/>
                                </MenuItem>
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.InputBindings>
                            <KeyBinding Modifiers="Ctrl" Key="C" Command="{x:Static local:MainWindow.CopyProject}"/>
                            <KeyBinding Modifiers="Ctrl" Key="X" Command="{x:Static local:MainWindow.CutProject}"/>
                            <KeyBinding Modifiers="Ctrl" Key="V" Command="{x:Static local:MainWindow.PasteProject}"/>
                            <KeyBinding Key="Delete" Command="{x:Static local:MainWindow.DeleteProject}"/>
                            <KeyBinding Key="Return" Command="{x:Static local:MainWindow.TranslateProject}"/>
                            <KeyBinding Modifiers="Ctrl" Key="Return" Command="{x:Static local:MainWindow.EditProject}"/>
                        </ListView.InputBindings>
                        <ListView.View >
                            <GridView ColumnHeaderContainerStyle="{StaticResource ListViewHeaderlessStyle}">
                                <GridView.Columns >
                                    <GridViewColumn Width="200">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <Image>
                                                        <Image.Style>
                                                            <Style>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Mode.IsRelative}" Value="True">
                                                                        <Setter Property="Image.Source" Value="{StaticResource RelIcon}"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Mode.IsRelative}" Value="False">
                                                                        <Setter Property="Image.Source" Value="{StaticResource AbsIcon}"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                                        <TextBlock Text="{Binding Name}"  VerticalAlignment="Center"/>
                                                        <TextBlock Text="{Binding Ratio,StringFormat='({0})'}" Foreground="#FF0A641F" VerticalAlignment="Center" Margin="15,0,0,0" Visibility="{Binding RatioEnabled, Converter={StaticResource BoolToVisibility}}"/>
                                                    </StackPanel>

                                                </StackPanel>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Width="28">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Style="{StaticResource ImageButtonStyle}" Click="BtnLink_Click" Visibility="{Binding HasURL, Converter={StaticResource BoolToVisibility}}">
                                                    <Image Source="{StaticResource LinkIcon}"/>
                                                </Button>
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView.Columns>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <Grid Grid.Row="3" Background="{StaticResource TBProjectBg}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal" Grid.Column="0" Margin="2 2">
                            <Button Visibility="{Binding IsRelative, Converter={StaticResource BoolToVisibility}}" Command="{x:Static local:MainWindow.TranslateProject}">
                                <Image Source="{StaticResource RelocateIcon}"/>
                            </Button>
                        </StackPanel>
                        <Grid Margin="2" Grid.Column="1">
                            <StackPanel Visibility="{Binding IsSingleProjectSelection, Converter={StaticResource BoolToVisibility}}" >
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="1" Text=":" Margin="5,0" HorizontalAlignment="Center" Foreground="Gray"/>
                                    <TextBlock Grid.Row="1" Grid.Column="1" Text=":" Margin="5,0" HorizontalAlignment="Center" Foreground="Gray"/>
                                    <!--<TextBlock Grid.Row="2" Grid.Column="1" Text=":" Margin="5,0" HorizontalAlignment="Center" Foreground="Gray" Visibility="{Binding CurrentProject.Mode.IsRelative, Converter={StaticResource BoolToVisibility}}"/>-->

                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Project:" HorizontalAlignment="Right"  Foreground="White"/>
                                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Mode:" HorizontalAlignment="Right"  Foreground="White"/>
                                    <!--<TextBlock Grid.Row="2" Grid.Column="0" Text="Base point:" Visibility="{Binding CurrentProject.Mode.IsRelative, Converter={StaticResource BoolToVisibility}}" HorizontalAlignment="Right"  Foreground="White" Grid.ColumnSpan="2" Margin="0,0,13,0"/>-->

                                    <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding CurrentProject.Name}" HorizontalAlignment="Left" Foreground="White"/>
                                    <TextBlock Grid.Row="1" Grid.Column="2" Style="{StaticResource AbsRel}" HorizontalAlignment="Left" Foreground="White"/>
                                    <!--<TextBlock Grid.Row="2" Grid.Column="2" Visibility="{Binding CurrentProject.Mode.IsRelative, Converter={StaticResource BoolToVisibility}}" HorizontalAlignment="Left"  Foreground="White">
                                        <TextBlock.Text>
                                            <MultiBinding StringFormat="({0},{1})">
                                                <Binding Path="CurrentProject.Mode.BasePoint.X" />
                                                <Binding Path="CurrentProject.Mode.BasePoint.Y" />
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>-->
                                </Grid>
                                <!--<Button Style="{StaticResource NorButton}" Margin="8" Padding="5" Visibility="{Binding CurrentProject.Mode.IsRelative, Converter={StaticResource BoolToVisibility}}" Click="BtnTranslateBasePoint_Click">
                                    <TextBlock HorizontalAlignment="Center">Translate<LineBreak/> Base Point</TextBlock> 
                                </Button>-->
                            </StackPanel>
                            <TextBlock Text="(Marged Project)" Visibility="{Binding IsMargedTarget, Converter={StaticResource BoolToVisibility}}" HorizontalAlignment="Center" Foreground="White"/>
                            <TextBlock Text="(not selected)" Visibility="{Binding NoProjectSelected, Converter={StaticResource BoolToVisibility}}" HorizontalAlignment="Center" Foreground="White"/>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>

            <GridSplitter Grid.Column="1" Width="3" HorizontalAlignment="Center" BorderThickness="1"/>


            <!-- Target List Pane -->
            <Grid Grid.Column="2" x:Name="TargetsPanel" Visibility="Visible" Margin="0,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>

                <Grid Grid.Row="0" Background="{StaticResource TBTargetBg}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel
                        Grid.Column="0"
                        Margin="5" 
                        HorizontalAlignment="Stretch" 
                        VerticalAlignment="Stretch" 
                        Orientation="Horizontal">
                        <!-- Document -->
                        <!--<Button x:Name="BtnNew" Content="New" Height="{StaticResource ToolBtnHeight}" Width="{StaticResource ToolBtnWidth}" Cursor="Hand" Margin="{StaticResource ToolBtnMargin}" Click="BtnNew_Click"/>
                    <Button x:Name="BtnSave" Content="Save" Height="{StaticResource ToolBtnHeight}" Width="{StaticResource ToolBtnWidth}" Cursor="Hand" Margin="{StaticResource ToolBtnMargin}" Click="BtnSave_Click"/>-->
                        <!-- Items -->
                        <Button Click="BtnPlay_Click">
                            <Image Style="{StaticResource PlayImage}"/>
                        </Button>
                        <Button x:Name="BtnAdd" 
                                Click="BtnAdd_Click">
                            <Image Source="{StaticResource AddIcon}"/>
                        </Button>
                        <!--<Button x:Name="BtnDel" 
                                Cursor="Hand" 
                                Click="BtnDel_Click">
                            <Image Source="{StaticResource RemoveIcon}"/>
                        </Button>-->
                        <StackPanel Orientation="Vertical">
                        <Button x:Name="BtnUp" Height="24"
                                Click="BtnUp_Click">
                            <Image Source="{StaticResource UpIcon}"/>
                        </Button>
                        <Button x:Name="BtnDown"  Height="24"
                                Click="BtnDown_Click">
                            <Image Source="{StaticResource DownIcon}"/>
                        </Button>
                        </StackPanel>
                        <StackPanel VerticalAlignment="Center" Orientation="Vertical" HorizontalAlignment="Left">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <CheckBox Content="Check Mode" Foreground="White" IsChecked="{Binding CheckMode}" x:Name="checkMode" Checked="checkMode_Checked" Unchecked="checkMode_Unchecked"/>
                                <CheckBox Content="Utilization" Foreground="White" IsChecked="{Binding UtlizationMode}" x:Name="utilizationiMode" Checked="utilizationMode_Checked" Unchecked="utilizationMode_Unchecked" Margin="10,0,0,0"/>
                            </StackPanel>
                            <Button Margin="0,6,0,0" Click="BtnTestAll_Click" Width="100" HorizontalAlignment="Left">
                                <TextBlock>Test All</TextBlock>
                            </Button>
                        </StackPanel>

                        <!--<Button x:Name="BtnStart" Content="Start" Height="{StaticResource ToolBtnHeight}" Width="{StaticResource ToolBtnWidth}" Cursor="Hand" Margin="{StaticResource ToolBtnSpMargin}" Click="BtnStart_Click"/>
                        <Button x:Name="BtnPause" Content="Pause" Height="{StaticResource ToolBtnHeight}" Width="{StaticResource ToolBtnWidth}" Cursor="Hand" Margin="{StaticResource ToolBtnMargin}" Click="BtnPause_Click"/>
                        <Button x:Name="BtnStop" Content="Stop" Height="{StaticResource ToolBtnHeight}" Width="{StaticResource ToolBtnWidth}" Cursor="Hand" Margin="{StaticResource ToolBtnMargin}" Click="BtnStop_Click"/>-->
                        <!-- Temporary Setting -->
                        <!--<StackPanel VerticalAlignment="Center" Margin="5,5,5,5" HorizontalAlignment="Left">
                            <TextBlock VerticalAlignment="Stretch">Pointing Mode</TextBlock>
                            <CheckBox x:Name="ChkAbs" Checked="ChkAbs_Checked">Absolute</CheckBox>
                            <CheckBox x:Name="ChkRel" Checked="ChkRel_Checked">Relative: base point = (0,0)</CheckBox>
                        </StackPanel>-->
                    </StackPanel>
                    <StackPanel
                        Grid.Column="2"
                        Margin="5" 
                        HorizontalAlignment="Right" 
                        VerticalAlignment="Stretch" 
                        Orientation="Horizontal">
                        <!-- Repeat -->
                        <Grid Visibility="{Binding IsSingleProjectSelection, Converter={StaticResource VisibilityHiddenFalseConverter}}">
                            <StackPanel Orientation="Vertical" VerticalAlignment="Center" Visibility="{Binding IsPlaying, Converter={StaticResource VisibilityHiddenTrueConverter}}">
                                <CheckBox Foreground="White" IsChecked="{Binding CurrentProject.IsInfinite, Mode=TwoWay}">Infinite</CheckBox>
                                <local:NumericTextBox Text="{Binding CurrentProject.Repeat, Mode=TwoWay}" Visibility="{Binding CurrentProject.IsInfinite, Converter={StaticResource VisibilityHiddenTrueConverter}}"  Margin="16,4,0,0"/>
                            </StackPanel>
                        </Grid>
                        <!-- HotKey -->
                        <StackPanel Orientation="Vertical" Margin="15,0" VerticalAlignment="Center">
                            <Button
                                Height="40"
                                Width="60"
                                Click="BtnHotkey_Click">
                                <Grid VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" Text="HotKey" Foreground="{StaticResource TBTargetBg}" TextAlignment="Center"/>
                                    <TextBlock Grid.Row="1" Text="{Binding HotKeyName}" Foreground="{StaticResource TBTargetBg}" FontWeight="Bold"  TextAlignment="Center"/>
                                </Grid>
                            </Button>
                        </StackPanel>
                        <!--<Button 
                            Click="BtnPlay_Click">
                            <Image Style="{StaticResource PlayImage}"/>
                        </Button>-->
                        <Button 
                            Click="BtnShowOparatingPanel_Click"
                            IsDefault="true">
                            <Image Source="{StaticResource FoldDownIcon}"/>
                        </Button>
                    </StackPanel>

                </Grid>
                <Grid x:Name="TargetGrid" Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <ListView Grid.Row="0" x:Name="TargetListView" ItemsSource="{Binding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <ListView.ContextMenu>
                            <ContextMenu Name="Target" Background="WhiteSmoke">
                                <MenuItem Header="Copy(_C)" InputGestureText="Ctrl+C" Command="{x:Static local:MainWindow.CopyTarget}"/>
                                <MenuItem Header="Cut(_T)" InputGestureText="Ctrl+X" Command="{x:Static local:MainWindow.CutTarget}"/>
                                <MenuItem Header="Paste(_P)" InputGestureText="Ctrl+P" Command="{x:Static local:MainWindow.PasteTarget}"/>
                                <Separator/>
                                <MenuItem Header="Edit" Command="{x:Static local:MainWindow.EditTarget}"/>
                                <MenuItem Header="Insert" Command="{x:Static local:MainWindow.InsertTarget}"/>
                                <MenuItem Header="Delete" Command="{x:Static local:MainWindow.DeleteTarget}"/>
                                <Separator/>
                                <MenuItem Header="Enable" Command="{x:Static local:MainWindow.EnableTarget}"/>
                                <MenuItem Header="Disable" Command="{x:Static local:MainWindow.DisableTarget}"/>
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.InputBindings>
                            <KeyBinding Modifiers="Ctrl" Key="C" Command="{x:Static local:MainWindow.CopyTarget}"/>
                            <KeyBinding Modifiers="Ctrl" Key="X" Command="{x:Static local:MainWindow.CutTarget}"/>
                            <KeyBinding Modifiers="Ctrl" Key="V" Command="{x:Static local:MainWindow.PasteTarget}"/>
                            <KeyBinding Key="Delete" Command="{x:Static local:MainWindow.DeleteTarget}"/>
                            <KeyBinding Key="Return" Command="{x:Static local:MainWindow.EditTarget}"/>
                            <KeyBinding Modifiers="Ctrl" Key="E" Command="{x:Static local:MainWindow.EnableTarget}"/>
                            <KeyBinding Modifiers="Ctrl" Key="D" Command="{x:Static local:MainWindow.DisableTarget}"/>
                        </ListView.InputBindings>

                        <ListView.View>
                            <GridView x:Name="TargetGridView">
                                <GridViewColumn Width="40">
                                    <GridViewColumnHeader IsEnabled="False"/>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image>
                                                <Image.Style>
                                                    <Style>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Enabled}" Value="True">
                                                                <Setter Property="Image.Source" Value="{StaticResource EnabledIcon}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Enabled}" Value="False">
                                                                <Setter Property="Image.Source" Value="{StaticResource DisabledIcon}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Type" Width="40">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <!--<TextBlock Text="{Binding Type, Converter={StaticResource TypeNameConverter}}" HorizontalAlignment="Center"/>-->
                                            <Grid>
                                                <Image>
                                                    <Image.Style>
                                                        <Style>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Type}" Value="CLICK">
                                                                    <Setter Property="Image.Source" Value="{StaticResource ClickIcon}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Type}" Value="DBLCLK">
                                                                    <Setter Property="Image.Source" Value="{StaticResource DoubleClickIcon}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Type}" Value="NOOP">
                                                                    <Setter Property="Image.Source" Value="{StaticResource NoopIcon}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Type}" Value="WHEEL">
                                                                    <Setter Property="Image.Source" Value="{StaticResource WheelIcon}"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Type}" Value="KEYPRESS">
                                                                    <Setter Property="Image.Source" Value="{StaticResource KeyPressIcon}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                                <TextBlock Text="{Binding WheelAmount}" Visibility="{Binding Type, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=WHEEL}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FF05A839"/>
                                                <Viewbox Margin="4">
                                                    <TextBlock Text="{Binding KeyShortLabel}" Visibility="{Binding Type, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=KEYPRESS}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="#FF05A839"/>
                                                </Viewbox>
                                            </Grid>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Point (abs)" Width="100">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid Height="24" HorizontalAlignment="Stretch">
                                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">
                                                    <Hyperlink Style="{StaticResource NoUnderlineHyperlink}" Click="Hyperlink_TargetPos">
                                                        <Run>
                                                            <Run.Text>
                                                                <MultiBinding StringFormat="{}{0},{1}">
                                                                    <Binding Path="ScreenPoint.AbsolutePoint.X" Mode="TwoWay" />
                                                                    <Binding Path="ScreenPoint.AbsolutePoint.Y" Mode="TwoWay" />
                                                                </MultiBinding>
                                                            </Run.Text>
                                                        </Run>
                                                    </Hyperlink>
                                                </TextBlock>
                                            </Grid>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <!--<GridViewColumn Header="Point (rel)" Width="100">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock HorizontalAlignment="Center">
                                            <TextBlock.Text>
                                                <MultiBinding StringFormat="({0},{1})">
                                                    <Binding Path="ScreenPoint.Point.X" />
                                                    <Binding Path="ScreenPoint.Point.Y" />
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>-->

                                <GridViewColumn Header="Wait" Width="50">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Wait}" HorizontalAlignment="Right"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Repeat" Width="50">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Repeat}" HorizontalAlignment="Right"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Condition" Width="160">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>

                                            <Grid HorizontalAlignment="Stretch">
                                                <Grid.Style>
                                                    <Style>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=checkMode, Path=IsChecked}" Value="True">
                                                                <Setter Property="Grid.Background" Value="#FFFDD98D"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Grid.Style>

                                                <Grid HorizontalAlignment="Center">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="24"/>
                                                        <ColumnDefinition Width="80"/>
                                                        <ColumnDefinition Width="20"/>
                                                        <ColumnDefinition Width="24"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Image Grid.Column="0">
                                                        <Image.Style>
                                                            <Style>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ConditionList.Type}" Value="NONE">
                                                                        <Setter Property="Image.Source" Value="{StaticResource NoopIcon}"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding ConditionList.Type}" Value="WAIT">
                                                                        <Setter Property="Image.Source" Value="{StaticResource WaitIcon}"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding ConditionList.Type}" Value="SKIP">
                                                                        <Setter Property="Image.Source" Value="{StaticResource SkipIcon}"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Image.Style>
                                                    </Image>
                                                    <TextBlock
                                                        Grid.Column="1"
                                                        Visibility="{Binding ConditionList.Type, Converter={StaticResource NegEnumVisibilityConverter}, ConverterParameter=NONE}"
                                                        HorizontalAlignment="Center" VerticalAlignment="Center">
                                                        <Hyperlink Style="{StaticResource NoUnderlineHyperlink}" Click="Hyperlink_ConditionPos">
                                                            <Run>
                                                                <Run.Text>
                                                                    <MultiBinding StringFormat="{}{0},{1}">
                                                                        <Binding Path="ConditionList.Head.ScreenPoint.AbsolutePoint.X" />
                                                                        <Binding Path="ConditionList.Head.ScreenPoint.AbsolutePoint.Y" />
                                                                    </MultiBinding>
                                                                </Run.Text>
                                                            </Run>
                                                        </Hyperlink>
                                                    </TextBlock>
                                                    <Grid 
                                                        Grid.Column="2"
                                                        Visibility="{Binding ConditionList.Type, Converter={StaticResource NegEnumVisibilityConverter}, ConverterParameter=NONE}"
                                                        Width="20" Height="20" VerticalAlignment="Center">
                                                        <Border BorderBrush="Black" BorderThickness="1">
                                                            <Border.Background>
                                                                <SolidColorBrush Color="{Binding ConditionList.Head.ColorRange[8]}"/>
                                                            </Border.Background>
                                                        </Border>
                                                        <Grid Margin="10,10,0,0" Width="10" Height="10"
                                                              Visibility="{Binding ConditionList.Head.Negation, Converter={StaticResource BoolToVisibility}}"
                                                              >
                                                            <Border BorderBrush="Black" BorderThickness="1">
                                                                <Border.Background>
                                                                    <SolidColorBrush Color="#FFffff"/>
                                                                </Border.Background>
                                                            </Border>
                                                            <Line X1="0" X2="10" Y1="0" Y2="10" Stroke="Black" StrokeThickness="1"/>
                                                            <Line X1="10" X2="0" Y1="0" Y2="10" Stroke="Black" StrokeThickness="1"/>
                                                        </Grid>
                                                    </Grid>
                                                    <Button Width="24" Height="24" Margin="0" Style="{StaticResource PlainButton}"
                                                            Grid.Column="3"
                                                            Padding="0"
                                                            BorderThickness="0"
                                                            Background="Transparent"
                                                            Visibility="{Binding ConditionList.IsMulti, Converter={StaticResource BoolToVisibility}}"
                                                            Click="BtnShowMoreCondition"
                                                            >
                                                        <Grid>
                                                            <Viewbox VerticalAlignment="Top" Margin="4">
                                                                <TextBlock Foreground="#3f51b5">AND</TextBlock>
                                                            </Viewbox>
                                                            <Image Source="{StaticResource MoreIcon}" Margin="0,14,0,0" Width="10" Height="10"/>
                                                        </Grid>
                                                    </Button>
                                                </Grid>
                                            </Grid>

                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>


                                <GridViewColumn Header="Comment" DisplayMemberBinding="{Binding Comment}" Width="200"/>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <GridSplitter Grid.Row="1" Height="3" VerticalAlignment="Center" HorizontalAlignment="Stretch" BorderThickness="1" Visibility="{Binding ElementName=checkMode, Path=IsChecked, Converter={StaticResource BoolToVisibility}}"/>
                    <TextBox x:Name="DebugOutput" Grid.Row="2" VerticalAlignment="Stretch" IsReadOnlyCaretVisible="True" Visibility="{Binding ElementName=checkMode, Path=IsChecked, Converter={StaticResource BoolToVisibility}}"/>
                </Grid>

            </Grid>
        </Grid>

        <!-- Getting Point Panel -->
        <view:GetPositionPanel x:Name="GettingPointPanel" Padding="10"  Visibility="Hidden" />

        <!--<Grid x:Name="GettingPointPanel" Visibility="Hidden">
            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontWeight="Bold">
                Move mouse to target point, and press 'A' key or '+' key in numeric pad.
            </TextBlock>
        </Grid>-->


        <!-- Edit Target Panel-->
        <!--<Grid x:Name="EditTargetPanel" Visibility="Hidden" HorizontalAlignment="Center" VerticalAlignment="Center" Background="{StaticResource DlgBg}">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <StackPanel Orientation="Horizontal">
                <StackPanel VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10" Orientation="Vertical">
                    <TextBlock Text="Type" Margin="0,10" Background="{StaticResource CaptionBg}"/>

                    <RadioButton x:Name="RdoClick" Content="Click" IsChecked="{Binding EditTarget.Type, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=CLICK}" GroupName="Type" Margin="10,0,0,0"/>
                    <RadioButton x:Name="RdoDoClick" Content="Double Click" IsChecked="{Binding EditTarget.Type, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=DBLCLK}" GroupName="Type" Margin="10,0,0,0"/>
                    <RadioButton x:Name="RdoNoop" Content="Noop" IsChecked="{Binding EditTarget.Type, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=NOOP}" GroupName="Type" Margin="10,0,0,0"/>

                    <TextBlock Text="Wait (msec)" Margin="0,10" Background="{StaticResource CaptionBg}" />
                    --><!--<TextBox Text="1000" local:TextBoxBehaviors.IsNumeric="True"/>--><!--
                    <local:NumericTextBox Text="{Binding EditTarget.Wait}" Margin="10,0,0,0" />

                </StackPanel>
                <StackPanel VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10" Orientation="Vertical" Visibility="{Binding EditTarget.Type, Converter={StaticResource TypePointVisibilityConverter}}">
                    <TextBlock  Text="Point" Margin="0,10" Background="{StaticResource CaptionBg}"/>
                    <TextBlock x:Name="TxXPos" Text="{Binding EditTarget.Point.X, StringFormat='X={0}'}" Margin="10,0,0,0"/>
                    <TextBlock x:Name="TxYPos" Text="{Binding EditTarget.Point.Y, StringFormat='Y={0}'}" Margin="10,0,0,0"/>
                    <Button x:Name="BtnGetPos" Content="Get Position" Width="auto" Margin="10,5,0,0" Click="BtnGetPos_Click"/>

                </StackPanel>

            </StackPanel>
            <StackPanel Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Stretch" Margin="10" Orientation="Vertical">
                <TextBlock Text="Comment" Margin="0,10" Background="{StaticResource CaptionBg}"/>
                <TextBox x:Name="TxComment" Text="{Binding EditTarget.Comment}" Margin="10,0,0,0"/>
            </StackPanel>
            <StackPanel Grid.Row="2" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="10" Orientation="Horizontal">
                <Button x:Name="BtnEditTargetOK" Content="OK" Width="60" IsDefault="True" Margin="0,0,10,0" Click="BtnEditTargetOK_Click"/>
                <Button x:Name="BtnEditTargetCancel" Content="Cancel" Width="60" IsCancel="True" Click="BtnEditTargetCancel_Click" />
            </StackPanel>

        </Grid>-->

        <ScrollViewer x:Name="Dialog" Visibility="Hidden" VerticalScrollBarVisibility="Auto">
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Background="{StaticResource DlgBg}">
                <view:ProjectEditPanel x:Name="EditProjectPanel" Padding="10" Visibility="Collapsed"/>
                <view:TargetEditPanel x:Name="EditTargetPanel" Padding="10" Visibility="Collapsed"/>
                <view:HotKeyPanel x:Name="HotKeyPanel" Padding="10" Visibility="Collapsed"/>
                <view:SamplingColor x:Name="SamplingColor" Padding="10" Visibility="Collapsed"/>
            </Grid>
        </ScrollViewer>
        <!-- Operating Panel -->
        <view:OperatingPanel x:Name="OperatingPanel" Visibility="Hidden"/>

    </Grid>
</Window>
