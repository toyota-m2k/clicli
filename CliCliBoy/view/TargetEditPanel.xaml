<UserControl x:Class="CliCliBoy.view.TargetEditPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CliCliBoy"
             xmlns:view="clr-namespace:CliCliBoy.view"
             xmlns:model="clr-namespace:CliCliBoy.model"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="400">
    <UserControl.Resources>
        <ResourceDictionary Source="CommonResource.xaml"/>
    </UserControl.Resources>

    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
        <Grid x:Name="TargetEditMain">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100" />
                <ColumnDefinition Width="200"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <Grid.Resources>
                <ResourceDictionary Source="DialogResource.xaml"/>
            </Grid.Resources>

            <!--Title-->
            <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Padding="4" Text="Target Item Setting" Margin="0,10" Background="{StaticResource DlgTitleBg}"/>

            <!--Type-->
            <TextBlock Grid.Row="1" Grid.Column="0" Text="Action Type" Style="{StaticResource left}"/>
            <!--<StackPanel Grid.Row="1" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10" Orientation="Vertical" Style="{StaticResource right}">
                <RadioButton Content="Click"        IsChecked="{Binding Type, Mode=TwoWay, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=CLICK}"   GroupName="Type"/>
                <RadioButton Content="Double Click" IsChecked="{Binding Type, Mode=TwoWay, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=DBLCLK}"  GroupName="Type"/>
                <StackPanel Orientation="Horizontal">
                    <RadioButton Content="Wheel"        IsChecked="{Binding Type, Mode=TwoWay, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=WHEEL}"   GroupName="Type" x:Name="chkWheel"/>
                    <local:NumericTextBox Text="{Binding WheelAmount, UpdateSourceTrigger=PropertyChanged}" Width="40" Margin="10,0" Visibility="{Binding ElementName=chkWheel, Path=IsChecked, Converter={StaticResource BoolToVisibility}}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <RadioButton Content="Key Press" IsChecked="{Binding Type, Mode=TwoWay, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=KEYPRESS}"   GroupName="Type" x:Name="chkKeyPress"/>
                    <ComboBox x:Name="KeyNames" 
                              ItemsSource="{Binding Source={StaticResource KeyTypes}}"
                              SelectedValue="{Binding PressKey}"
                              Visibility="{Binding ElementName=chkKeyPress, Path=IsChecked, Converter={StaticResource BoolToVisibility}}"
                              Margin="10 0 0 0">
                    </ComboBox>
                </StackPanel>
                <RadioButton Content="Noop"         IsChecked="{Binding Type, Mode=TwoWay, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=NOOP}"    GroupName="Type"/>
            </StackPanel>-->

            <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Vertical" Style="{StaticResource right}">
                <ComboBox   ItemsSource="{Binding Source={StaticResource ClickTypes}}"
                            SelectedValue="{Binding Type}"
                            >
                </ComboBox>
                <StackPanel Orientation="Horizontal"
                            Visibility="{Binding Type, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=KEYPRESS}"
                            Margin="0,5,0,0"
                            >
                    <TextBlock Text="Key: " VerticalAlignment="Center"/>
                    <ComboBox   ItemsSource="{Binding Source={StaticResource KeyTypes}}"
                            SelectedValue="{Binding PressKey}"
                            Margin="0"
                            HorizontalAlignment="Left"
                            >
                    </ComboBox>
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            Visibility="{Binding Type, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter=WHEEL}"
                            Margin="0,5,0,0"
                            >
                    <TextBlock Text="Amounts: " VerticalAlignment="Center"/>
                    <local:NumericTextBox 
                            Text="{Binding WheelAmount, UpdateSourceTrigger=PropertyChanged}" 
                            Width="60" Margin="0" 
                            HorizontalAlignment="Left"
                            />
                </StackPanel>
            </StackPanel>

            <!--Point-->
            <TextBlock Grid.Row="2" Grid.Column="0" Text="Point" Visibility ="{Binding Type, Converter={StaticResource TypePointVisibilityConverter}}" Style="{StaticResource left}"/>
            <Button Grid.Row="2" Grid.Column="1" Style="{StaticResource StrongButton}" Width="auto" Click="Button_SetPoint" Visibility="{Binding Type, Converter={StaticResource TypePointVisibilityConverter}}">
                <TextBlock Visibility="{Binding Type, Converter={StaticResource TypePointVisibilityConverter}}">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0},{1}">
                            <Binding Path="ScreenPoint.Point.X" />
                            <Binding Path="ScreenPoint.Point.Y" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
            </Button>

            <!-- Wait -->
            <TextBlock Grid.Row="3" Grid.Column="0" Text="Wait" Style="{StaticResource left}"/>
            <local:NumericTextBox x:Name="NtWait" Grid.Row="3" Grid.Column="1" Text="{Binding Wait, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource right}"/>
            <Grid Grid.Row="4" Grid.Column="1">
                <StackPanel Orientation="Horizontal">
                    <Button Content="3000" Style="{StaticResource NorButton}" Click="BtnPreset_3000"/>
                    <Button Content="1000" Style="{StaticResource NorButton}" Click="BtnPreset_1000"/>
                    <Button Content="500" Style="{StaticResource NorButton}" Click="BtnPreset_500"/>
                    <Button Content="100" Style="{StaticResource NorButton}" Click="BtnPreset_100"/>
                    <Button Content="50" Style="{StaticResource NorButton}" Click="BtnPreset_50"/>
                </StackPanel>
            </Grid>
            <TextBlock Grid.Row="3" Grid.Column="2" Text="msec" Style="{StaticResource right}"/>

            <!-- Repeat -->
            <TextBlock Grid.Row="5" Grid.Column="0" Text="Repeat" Style="{StaticResource left}"/>
            <local:NumericTextBox x:Name="NtRepeat" Grid.Row="5" Grid.Column="1" Text="{Binding Repeat, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource right}"/>
            <TextBlock Grid.Row="5" Grid.Column="2" Text="times" Style="{StaticResource right}"/>

            <!-- Comment -->
            <TextBlock Grid.Row="6" Grid.Column="0" Text="Comment" HorizontalAlignment="Right" Style="{StaticResource left}"/>
            <TextBox x:Name="TxComment" Grid.Row="6" Grid.Column="1" Text="{Binding Comment, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource right}"/>

            <!-- Move/Test -->
            <StackPanel Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="3" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10,0,5" Visibility="{Binding Type, Converter={StaticResource TypePointVisibilityConverter}}">
                <Button Style="{StaticResource NorButton}" Content="Show Pos." Width="80" VerticalAlignment="Bottom" Click="Button_Move"/>
                <Button Style="{StaticResource NorButton}" Content="Try now" Width="80" VerticalAlignment="Top" Click="Button_Test"/>
                <Button Style="{StaticResource NorButton}" Content="Adjust" Width="80" VerticalAlignment="Top" Click="Button_Adjust"/>
            </StackPanel>

            <!-- Conditions -->
            <TextBlock Grid.Row="8" Grid.Column="0" Text="Condition" HorizontalAlignment="Right" Style="{StaticResource left}"/>

            <StackPanel Grid.Row="8" Grid.Column="1" 
                        Orientation="Horizontal" Margin="0,0,5,0"
                        VerticalAlignment="Center">
                <RadioButton Content="None" IsChecked="{Binding ConditionList.Type, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=NONE, Mode=TwoWay}" GroupName="ConditionType" Margin="4"/>
                <RadioButton Content="Skip" IsChecked="{Binding ConditionList.Type, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=SKIP, Mode=TwoWay}" GroupName="ConditionType" Margin="4"/>
                <RadioButton Content="Wait" IsChecked="{Binding ConditionList.Type, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=WAIT, Mode=TwoWay}" GroupName="ConditionType" Margin="4"/>
            </StackPanel>
            <Grid Grid.Row="9" Grid.Column="1"
                Visibility="{Binding ConditionList.Type, Converter={StaticResource NegEnumVisibilityConverter}, ConverterParameter=NONE}"
                >
                <ListView 
                      x:Name="ConditionListView" 
                      ItemsSource="{Binding}" Margin="0,0,5,0" Height="100">
                    <ListView.View >
                        <GridView x:Name="ConditionGridView" ColumnHeaderContainerStyle="{StaticResource ListViewHeaderlessStyle}">
                            <GridView.Columns >
                                <GridViewColumn Width="100">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Grid Width="20" Height="20" Visibility="{Binding IsValid, Converter={StaticResource BoolToVisibility}}">
                                                    <Border BorderBrush="Black" BorderThickness="1">
                                                        <Border.Background>
                                                            <SolidColorBrush Color="{Binding ColorRange[8]}"/>
                                                        </Border.Background>
                                                    </Border>
                                                </Grid>
                                                <TextBlock Margin="4,0,0,0" Visibility="{Binding IsValid, Converter={StaticResource BoolToVisibility}}">
                                                <Hyperlink Style="{StaticResource NoUnderlineHyperlink}" Click="onConditonCoordinateClicked">
                                                    <Run>
                                                        <Run.Text>
                                                            <MultiBinding StringFormat="{}{0},{1}">
                                                                <Binding Path="ScreenPoint.Point.X" Mode="OneWay"/>
                                                                <Binding Path="ScreenPoint.Point.Y" Mode="OneWay"/>
                                                            </MultiBinding>
                                                        </Run.Text>
                                                    </Run>
                                                </Hyperlink>
                                                </TextBlock>
                                                <Button Style="{StaticResource MiniButton}" Click="onAddCondition" Visibility="{Binding IsValid, Converter={StaticResource NegBoolToVisibility}}">
                                                    <Image Source="{StaticResource AddIcon}"/>
                                                </Button>
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView.Columns>
                        </GridView>
                    </ListView.View>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem">
                            <EventSetter Event="PreviewMouseLeftButtonUp" Handler="ListViewItem_PreviewMouseLeftButtonUp" />
                        </Style>
                    </ListView.ItemContainerStyle>

                </ListView>
            </Grid>
            <Button Grid.Row="9" Grid.Column="2" Content="Del"  
                Visibility="{Binding ConditionList.Type, Converter={StaticResource NegEnumVisibilityConverter}, ConverterParameter=NONE}"
                Click="onDeleteSelectedConditions"
                Style="{StaticResource NorButton}" VerticalAlignment="Bottom"/>

            <StackPanel Grid.Row="10" Grid.Column="1" 
                        Orientation="Horizontal" Margin="0,0,5,0"
                        Visibility="{Binding ConditionList.IsMulti, Converter={StaticResource BoolToVisibility}}"
                        VerticalAlignment="Center">
                <RadioButton Content="AND" IsChecked="{Binding ConditionList.Combination, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=AND, Mode=TwoWay}" GroupName="CombinationType" Margin="4"/>
                <RadioButton Content="OR" IsChecked="{Binding ConditionList.Combination, Converter={StaticResource EnumBooleanConverter}, ConverterParameter=OR, Mode=TwoWay}" GroupName="CombinationType" Margin="4"/>
            </StackPanel>

            <!-- Ok/Cancel -->
            <StackPanel Grid.Row="11" Grid.Column="0" Grid.ColumnSpan="3" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,5,0,5">
                <Button Style="{StaticResource OkButton}" Content="OK" Width="80" IsDefault="True" Margin="0,0,10,0" VerticalAlignment="Bottom" Click="Button_Ok"/>
                <Button Style="{StaticResource CancelButton}" Content="Cancel" Width="80" IsCancel="True" VerticalAlignment="Top" Click="Button_Cancel"/>
            </StackPanel>

        </Grid>
        <Grid x:Name="TargetEditSub" Visibility="Hidden">
            <view:PositionTuner x:Name="PositionTuner"/>
        </Grid>
    </Grid>

</UserControl>
